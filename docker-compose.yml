services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    command: ["api"]
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://localhost:27017/emoai2}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    restart: unless-stopped

  processing-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["processing-worker"]
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://localhost:27017/emoai2}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'

  ffmpeg-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["ffmpeg-worker"]
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://localhost:27017/emoai2}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'

volumes:
  redis_data:
